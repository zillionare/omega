[[tool.poetry.source]]
name = "ali"
url = "https://mirrors.aliyun.com/pypi/simple/"
#default = true
secondary = true

[tool.poetry]
name = "zillionare-omega"
packages = [
  {include = "omega"}
]

description = "高速分布式行情服务器"
authors = ["jieyu <code@jieyu.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://zillionare-omega.readthedocs.io"
repository = "https://github.com/zillionare/omega"
documentation = "https://zillionare-omega.readthedocs.io"
keywords = ["AI", "quant", "trade", "stock"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
]

include = [
    "LICENSE",
    "README.md",
    "HISTORY.md",
    "AUTHORS.md",
    "docs/*",
    "tests/*"
]

version = "2.0.0a7"

[tool.poetry.dependencies]
python=">=3.8,<3.9"

aiocache = "0.11.1"
aiohttp = ">=3.8.0"
aioredis = "^2.0.1"
APScheduler = "^3.8.1"
arrow = "^1.2"
cfg4py = ">=0.9"
fire = "0.4.0"
minio = "^7.1.2"
multidict = "^6.0.2"
numpy = "^1.23"
pandas = "^1.3.5"
pyemit = "^0.5.0"
rlog = "0.3"
retrying = "^1.3.3"
sh = "1.14.1"
xxhash = "2.0.0"

zillionare-core-types = "^0.5.2"
zillionare-omega-adaptors-jq = "^1.1.0"

black = {version = "^22.3.0", optional = true}
isort  = { version = "5.10.1", optional = true}
flake8  = { version = "4.0.1", optional = true}
pre-commit  = { version = "^2.17.0", optional = true}
pytest  = { version = "7.0.1", optional = true}
pytest-cov  = { version = "3.0.0", optional = true}
tox  = { version = "^3.24.5", optional = true}
pip  = { version = "^22.0.3", optional = true}
psutil  = { version = "^5.7.3", optional = true}

mkdocs  = { version = "^1.3.0", optional = true}
mkdocs-include-markdown-plugin  = { version = "^3.2.3", optional = true}
mkdocs-material  = { version = "^8.1.11", optional = true}
mkdocstrings  = { version = "^0.18.0", optional = true}
mkdocs-material-extensions  = { version = "^1.0.3", optional = true}
mkdocs-autorefs = {version = "0.3.1", optional = true}
toml = {version = "^0.10.2", optional = true}
twine  = { version = "^3.8.0", optional = true}
livereload = {version = "^2.6.3", optional = true}
mike = { version="^1.1.2", optional=true}
freezegun = {version = "^1.2.1", optional = true}
zarr = "^2.13.3"
sanic = "^22.9.1"
akshare = "^1.8.27"
retry = "^0.9.2"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "psutil",
    "freezegun"
    ]

dev = ["tox", "pre-commit", "pip", "twine", "toml"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "Jinja2",
    "livereload",
    "mike"
    ]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
omega = 'omega.cli:main'

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.history
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''
